Consider the code below and figure out its time complexity.

int try_func(int n) {
  int cnt = 0;
  for (int k = 0; k < n; k++) {
    for (int p = k; p > 0; p--) {
      return ++cnt;
    }
  }
}

Answer: Time complexity = O(n^2)

Reasoning:
- Outer for loop increments by 1.
- Outer for loop increments until k surpasses n.
- Therefore, the outer for loop executes n times.

- Inner for loop decrements by 1.
- Inner for loop decrements until 0 surpasses p.
- Therefore, the inner for loop executes n times.

- Since nested loop complexites are multiplied,
- The total time complexity of the function is O(n) * O(n), or O(n^2).